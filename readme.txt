Dipayan Deb

NOTE- In task. If period and deadline same then put 0 in place of deadline.

List of files
1. start.c - This contains the main function of the program. The program starts execution from this.
2. aperiod.h - Contains all the functions which main calls to schedule the apreiodic jobs.
3. datastr.h - Contains all the defination of the structure data structure used in the project.
4. period.h - Contains all the functions which main calls to schedule the periodic jobs.
5. spor.h - Contains all the functions which main calls to schedule the sporadic jobs.
6. aperiodc.txt - contains the aperiodic jobs to be scheduled. The first line conatins the number of aperiodic jobs. The next
		  lines contains the aperiodic jobs. Each line contains one job in the format - arrival time execution time.
7. periodicSchedule.txt - Contains the itermediate static schedule.
format for file.

Number of frames
Number of tasks remaining slack
TaskNo JobNo arrival deadline execution-time

8. sporadic.txt - Contains all the sporadic jobs with similar format as aperiodic.txt. The job format is - arrival deadline execution
9. task.txt - Contains all the periodic tasks with similar format as above. Task format - period execution deadline. If period and deadline same , put deadline as 0.
10. makefile - contains instruction to make the file.
11. readme - this file
12. finalSchedule.txt - Contains the final timeline. PJ - Periodic Job , AJ - Aperiodic Jobs, SJ - Sporadic Jobs. Periodic jobs start from 1(both task and Job).

HOW TO COMPILE
make
HOW TO USE 
1. Put the tasks as per required in the above mention format in the respective files.
2. ./start task.txt

STRUCTURE OF THE PROGRAM.
ALL the functions are called from the main of the program.
First the periodic job is loaded onto the program.This is done in the main.Then the hyperperiod is calculated. Frames are initialed uptill the 
hyperperiod. The static schedule is generated by the createschedule function. The create jobs are attached into the respective frames. The method 
used is similar to the rate monotonic algorithm.
Once this is done the sigma matrix is calculated.Which will give the total slack time between two frames. Even when on different hyperperiod.
Using this and the formulas given in the book we insert the sporadic jobs using the checksporadicjobsatzero() and the createsporadicshedule() functions.The timeline is increased from the hyperperiod(if needed) to the frame before the max deadline of the given sporadic jobs. This uses the EDF algorithm. A queue is created in a sorted manner based on deadline. The jobs are entered into the queue after all the 3 conditions are satisfied.

Finally scheduleaperiodicjobs is used to schedule the aperiodic jobs in the time frame.



What have you not done?
1. Displays only the context switch and absolute response time jitter.(altough sometimes does not work, because of pointer shallow copy issue.I have disabled this).
2. WCET(20 to 100 % relaxaction).
3. Splitting of tasks. 

BUGS
1. Unfortunately the periodic tasks inputs only accept integer value. However the sporadic and aperiodic accept float. Unfortunately when I realized this it was to late to change periodic into floats.

2. Aperiodic jobs displayed only till the hyperperiod or the frame whose ending time is just before the maximum deadline of sporadic jobs(whichever is more).
	- If there are aperiodic jobs left in the queue then we have to add additonal frames. The code should automativally detect the additional 		  frames and schedule the jobs properly. 

3. Someplaces have shallow copy issue. Unfotuantely debugging this will need some more time.

